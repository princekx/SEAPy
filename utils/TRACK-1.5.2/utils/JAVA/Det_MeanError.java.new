package tigge;
import java.util.*;
import java.io.*;
import EPSAnalysis.*;

public class Det_MeanError{
	public static void main(String[] args)throws IOException{
		
		
		String date = null;
		String filename = null;
		double[] tmpIntDiff = new double[65];
		double[] sumIntDiff = new double[65];
		double[] tmpSepDiff = new double[65];
		double[] sumSepDiff = new double[65];
                double[] tmpIntBias = new double[65];
                double[] sumIntBias = new double[65];
		
		
		int[] countDiff = new int[65];
		
		TrackDate forSt;

                if(args.length != 2) {
                  System.err.println("Need to provide a directory with path to read and which intensity field to use");
                  System.exit(1);
                }

                int ifd = Integer.parseInt(args[1]);

                File[] forDates = (new File(args[0])).listFiles();

                System.out.println(forDates.length);
		
                FilenameFilter fmatchtyp = new FilenameFilter() {
                   public boolean accept(File d, String name) {
                      boolean ret;
                      if(name != null && (name.startsWith("trmatch") )) {
                        ret = true;
                      }
                      else ret = false;
                      return ret;
                   }
                };
		
		for(int i=0; i<65; i++){
								
                        tmpSepDiff[i]=-100;
                        tmpIntDiff[i]=-100;
                        tmpIntBias[i]=-100;
			sumIntDiff[i]=0;
			sumSepDiff[i]=0;
                        sumIntBias[i]=0;
			countDiff[i]=0;
		
		}
		
		for(int i=0; i<forDates.length; i++){
		
			System.out.println(i + " of " + forDates.length);
		        System.out.println(forDates[i].toString());	
			
			date = forDates[i].toString();
                        date = date.substring(date.length() - 10);
				
			System.out.println(date);
				
			forSt = new TrackDate(Integer.parseInt(date.substring(0,4)), Integer.parseInt(date.substring(4,6)), Integer.parseInt(date.substring(6,8)), Integer.parseInt(date.substring(8,10)));

                        File curdir = new File(forDates[i].toString() + "/MATCH/DET/");

                        if (curdir.isDirectory()) {

                            File[] trackFile = curdir.listFiles(fmatchtyp);

                            if(trackFile != null){
                               //System.out.println(trackFile.length);

                               for(int j=0; j<trackFile.length; j++){
                                  for(int l=0; l<65; l++){
                                     tmpSepDiff[l]=-100;
                                     tmpIntDiff[l]=-100;
                                     tmpIntBias[l]=-100;
                                  }
				
		         	  Track analysis = TrackOperations.File2Track(trackFile[j], 0, ifd);//analysis track
				  Track forecast = TrackOperations.File2Track(trackFile[j], 1, ifd);//forecast track

			  	  tmpIntBias = TrackOperations.intensityDifference2(analysis,forecast,forSt);
                                  tmpIntDiff = TrackOperations.intensityDifference(analysis,forecast,forSt);
				  tmpSepDiff = TrackOperations.separationDistance(analysis,forecast,forSt);
													

				  for(int k=0; k<65; k++){
							
				     if(tmpSepDiff[k] != -100){
										
				        sumIntDiff[k]+=tmpIntDiff[k];
 					sumIntBias[k]+=tmpIntBias[k];
					sumSepDiff[k]+=tmpSepDiff[k];
								
					countDiff[k]++;
							
				      }

				  }//end of k loop
				  
			       }
			       
			    }
							

			}//end of j for loop
		
		}//end of i for loop

// output deterministic stats
                System.out.println("Deterministic Track: Forecast points, Seperation Distance, Intensity Difference, Intensity Bias");
                for(int i=0; i<65; i++){
                        System.out.println(Round.round((double)i/4,2) + "\t" + countDiff[i] + "\t" + Round.round(sumSepDiff[i]/countDiff[i],4) + "\t" + Round.round(sumIntDiff[i]/countDiff[i],4) + "\t" + Round.round(sumIntBias[i]/countDiff[i],4));
                }
		
	}//end of main method
}//end of class
