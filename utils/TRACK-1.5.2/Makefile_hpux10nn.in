#
# Makefile for track.2
#
# 
#
# usage='make [comp_opt]'
#
#
# where comp_opt = "" or "all"  complete build
#                = "libs"       libraries only built
#                = "src"        main source only built
#                = "surfit"     include surface fitting libraries
#                = "lopt"       include surface fitting and local optimization libraries
#

#

 PROGRAM = track

      CC = gcc
     G77 = F77
  SYSTEM = HP_UX
  LIBGCC = $(GCCLIB)
LOCALLIB = ./lib
INCLUDES = include
    MAKE = make
  RANLIB = "ar t"
  TARGET =
  MDEBUG = NMDB
 MUNIRAS = NOUNIRAS
  MNAMEL = NONAMELISTS
F77APPEND = NOUNDERSCORE
HAVE_NETCDF = NETCDF

  FFLAGS = -g

#
# NETCDF includes and libraries
#

NETINC = -I${NETCDF}/include
NETLIB = -L${NETCDF}/lib -lnetcdf

# Additional compilation flags for compiling with egcs or gcc-2.95
#  AD_C_FLAGS=-Wno-unknown-pragmas
  

ADLIBS = -Wl,-L$(LOCALLIB) -lchisqr $(NETLIB)
ADDINCS = $(NETINC)
LIB_ADDINCS =

#
# gcc libs
#
#GCCLIBS = 

GCCLIBS = -Wl,-L$(LIBGCC) -lgcc

LIBS = -Wl,-L/lib -lm -lM -lc $(GCCLIBS) -Wl,-L/usr/lib -lf -lcl
#LIBS = $(GCCLIBS)

#
# uniras libraries, comment as required
#
UNILIBS =

# Use for older versions of uniras, i.e. 6v3 and less (works on SUN may need
# to modify for HPUX installation of UNIRAS).
#
#UNILIBS =  -luni -Bdynamic -lXm -Bstatic -lXt -Bdynamic -lX11 -lF77 -lM77 -lsunmath -L/usr/ccs/lib -lgen -lnsl -lsocket -lm -lc -ldum

# Use for uniras 6v4 (works on SUN may need to modify for HPUX 
# installation of UNIRAS)
#
#UNILIBS = -lagx -llic -Bdynamic -lXm -Bstatic -lXt -Bdynamic -lX11 -lF77 -lM77 -lsunmath -L/usr/ccs/lib -lgen -lnsl -lsocket -lintl -lm -lc -ldum


SOURCE = src
OBJS = $(SOURCE)/*.o

all: PROGRAM2
surfit lopt: PROGRAM2

# edit target dependency for target memdb as required

memdb: lopt

# additional target for dynamic memory debugging

# conditional macros are not supported in versions of HPUX lower than 10,
# comment as required.

# --------------------Conditional Macros---------------------------

#memdb:= MDEBUG = MDB
#memdb:= OBJS = ${OBJS} -lmapmalloc

surfit:= TARGET = surfit
surfit:= ADLIBS = ${ADLIBS} -Wl,-L$(LOCALLIB) -lsmp

lopt:= TARGET = lopt
lopt:= ADLIBS = ${ADLIBS} -Wl,-L$(LOCALLIB) -lopt -lsmp -lfft

TARGET = lopt

# ----------------Alternative to Conditional macros----------------

#TARGET = lopt
#ADLIBS = ${ADLIBS} -Wl,-L$(LOCALLIB) -lopt -lsmp -lfft

# --------------------End of Conditional Macros--------------------

MAKEARGS = TARGET=$(TARGET) CC=$(CC) MDEBUG=$(MDEBUG) MUNI=$(MUNIRAS) MNAME=$(MNAMEL) SYSTEM=$(SYSTEM) ADDINCS=$(ADDINCS) USAPPEND=$(F77APPEND) HAVNETC=$(HAVE_NETCDF) N_FFLAGS='$(FFLAGS)' AD_C_FLAGS='$(AD_C_FLAGS)'

LIB_MAKEARGS = CC=$(CC) G77=$(G77) MDEBUG=$(MDEBUG) RANLIB='$(RANLIB)' SYSTEM='$(SYSTEM)' ADDINCS='$(LIB_ADDINCS)' USAPPEND='$(F77APPEND)' N_FFLAGS='$(FFLAGS)' AD_C_FLAGS='$(AD_C_FLAGS)'

.KEEP_STATE:


include: FORCE
	cd $@; $(MAKE); rm -f *%

f77_param: FORCE
	cd $@; $(MAKE) MNAME=$(MNAMEL); rm -f *%


SRC: 
	$(MAKE) $(SOURCE) $(MAKEARGS)

$(SOURCE): include f77_param FORCE
	cd $@; $(MAKE) -f Makefile.hpux10 $(TARGET) $(MAKEARGS); rm -f *%
	
libs:
	$(MAKE) $(LOCALLIB) $(LIB_MAKEARGS)

$(LOCALLIB): FORCE
	cd $@; $(MAKE) $(LIB_MAKEARGS); rm -f *%

PROGRAM1: $(PROGRAM)

PROGRAM2: libs $(PROGRAM)

$(PROGRAM): SRC FORCE
#	rm -f src/sincos.o
	$(FC) $(FFLAGS) -o $@ ${OBJS} ${UNILIBS} ${LIBS} ${ADLIBS}
#
# link mallocmap to provide a print out of the heap for debugging
#
#	${FC} ${OBJS} -lmapmalloc ${ADLIBS} ${UNILIBS} ${LIBS}
	mv $@ bin
	rm -f *%
#	cd $(SOURCE); rm -f *.o

utils: FORCE
	cd utils; make -e SYSTEM='${SYSTEM}' CC='${CC}' HAVNETC='${HAVE_NETCDF}' ADDINCS='${NETINC}' ADLIBS='${NETLIB}' AD_C_FLAGS='$(AD_C_FLAGS)'

depend: depend_src depend_libs


depend_src: f77_param
	cd $(SOURCE); $(MAKE) -f Makefile.hpux10 $(TARGET) $(MAKEARGS) depend

depend_libs:
	cd $(LOCALLIB); $(MAKE) $(LIB_MAKEARGS) depend


FORCE:

